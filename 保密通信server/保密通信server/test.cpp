//#include<stdio.h>
//#include <winsock2.h>
//#include <windows.h>
//#include<time.h>
//#include<thread>
//#include"random.h"
//#include"bigint.h"
//using namespace std;
//#define max_threads 10
//#pragma comment(lib,"ws2_32.lib") //winsock library
//
//
//bigInt N1, N2;//随机数
//bigInt Key;
//string n_astr("101407628385108512925543677817200169344315054987033955320928719787018970982119759558416101819705107356503132441709662510959075194536940982001001853936941528772339111711633210419437875155697629171356440179152472454681528060205111932316734300230180361045256856077963659361244405727024274873659438824808932559837");
//string e_astr("67605085590072341950362451878133446229543369991355970213952479858012647321413173038944067879803404904335421627806441673972716796357960654667334569291294339086869511624942965644888917234847462412332496550667861934366478347209409934664169822352669355229507405669269234419537144980672410743487955205837182097771");
//bigInt n_A(n_astr), e_A(e_astr);//对方的公钥
//string n_bstr("77195310450224681443701893280619391413301600979699348131159112344340188591003633601945314755687418430548046225959369455023014162580305823887079348500824458424309499826749021637802441598901295989466525304697081741335985344074342189900590837317256395491721089528941320109592538404471271067312411688184475868507");
//string e_bstr("61756248360179745154961514624495513130641280783759478504927289875472150872802906881556251804549934744438436980767495564018411330064244659109663478800659552353300559002711875906687152089348850864638154247293963504151360382230647576693207007024044024700221519798337578323478606375788824679599087491273293306765");
//string d_bstr("5");
//bigInt n_B(n_bstr), e_B(e_bstr), d_B(d_bstr);//己方的公钥和私钥
//bool isRecv = 0, isSend = 0;
//void decrypt_rsa(bigInt* Cipher, bigInt* mes, bigInt n, bigInt e);
////void encrypt_rsa(char* mes, char* Cipher, bigInt n, bigInt d);
//void encrypt_rsa(bigInt* mes, bigInt* Cipher, bigInt n, bigInt d);
//
//int main() {
//	
//	bigInt Cipher;
//	string temp1_str = bigInt2string(N1);
//	temp1_str += "\|\|\|b2";
//	string str = "3";
//	bigInt plain=string2bigInt(temp1_str), temp(str);
//
//	encrypt_rsa(&plain, &Cipher, n_B, e_B);//传的是bigInt
//}
//
//void decrypt_rsa(bigInt* Cipher, bigInt* mes, bigInt n, bigInt e)
//{
//	bigInt temp;
//	*(mes) = power(*(Cipher), e, n, temp);
//}
//
//void encrypt_rsa(bigInt* mes, bigInt* Cipher, bigInt n, bigInt d)
//{
//	bigInt temp;
//	//bigInt mesplain = *mes;
//	*(Cipher) = power(*(mes), d, n, temp);
//}
